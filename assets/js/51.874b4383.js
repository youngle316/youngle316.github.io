(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{490:function(t,e,a){"use strict";a.r(e);var v=a(20),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"通过todo项目学习react理念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过todo项目学习react理念"}},[t._v("#")]),t._v(" 通过Todo项目学习React理念")]),t._v(" "),a("blockquote",[a("p",[t._v("React是一个为数据提供渲染为HTML视图的开源JavaScript 库。它也是前端下载量最多的一个框架。React的目的就是使用JavaScript创建大型的，快速响应的网络应用。为了更好的学习React，React理念（英文是Thinking In React）的掌握就显得至关重要。在这篇文章中，通过一个Todo项目来一步一步的学习React理念。")])]),t._v(" "),a("h2",{attrs:{id:"一-项目搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-项目搭建"}},[t._v("#")]),t._v(" 一 项目搭建")]),t._v(" "),a("h3",{attrs:{id:"_1-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍"}},[t._v("#")]),t._v(" 1 介绍")]),t._v(" "),a("p",[t._v("这个项目的脚手架工具使用的是："),a("code",[t._v("create-react-app")]),t._v("，"),a("a",{attrs:{href:"https://facebook.github.io/create-react-app/docs/getting-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("它有以下几个优点：")]),t._v(" "),a("ul",[a("li",[t._v("零配置创建React应用")]),t._v(" "),a("li",[t._v("对前端资源JS，CSS，图片等提供了资源构建打包功能")]),t._v(" "),a("li",[t._v("有自动刷新，代理转发，单元测试等来提高开发效率")])]),t._v(" "),a("h3",{attrs:{id:"_2-使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用"}},[t._v("#")]),t._v(" 2 使用")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("create-react-app")]),t._v("创建一个新的项目可以使用"),a("code",[t._v("npx")]),t._v("，"),a("code",[t._v("npm")]),t._v("，"),a("code",[t._v("yarn")]),t._v("等，使用"),a("code",[t._v("npx")]),t._v("时需要"),a("code",[t._v("npm")]),t._v("的版本大于5.2")]),t._v(" "),a("p",[t._v("这里只介绍npx的使用方式，其他的方式可以查看官方文档")]),t._v(" "),a("h4",{attrs:{id:"npx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npx"}},[t._v("#")]),t._v(" npx")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("npx create-react-app my-app\n")])])]),a("p",[a("code",[t._v("my-app")]),t._v("指项目名称")]),t._v(" "),a("p",[t._v("创建完成后可以通过"),a("code",[t._v("npm start")]),t._v("来打开新创建的应用。")]),t._v(" "),a("h4",{attrs:{id:"eslint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint"}},[t._v("#")]),t._v(" ESLint")]),t._v(" "),a("p",[t._v("可以通过这篇"),a("a",{attrs:{href:"https://younglele.cn/blog/skill/add-eslint-prettier-for-react.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("文章"),a("OutboundLink")],1),t._v("，使用"),a("code",[t._v("ESLint")]),t._v("和"),a("code",[t._v("Prettier")]),t._v("来规范代码的书写。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"二-react理念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-react理念"}},[t._v("#")]),t._v(" 二 React理念")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://reactjs.org/docs/thinking-in-react.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Thinking In React"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Todo项目的代码可从这里进行"),a("a",{attrs:{href:"https://github.com/youngle316/todo_react",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看与下载"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"start-with-a-mock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start-with-a-mock"}},[t._v("#")]),t._v(" Start With A Mock")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("从模拟页面开始")])])]),t._v(" "),a("p",[t._v("想象我们已经有一个设计师给我们的原型图。原型图如下所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.ax1x.com/2019/04/06/AWWErt.png",alt:"Todo原型图"}})]),t._v(" "),a("h3",{attrs:{id:"step-1-break-the-ui-into-a-component-hierarchy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-1-break-the-ui-into-a-component-hierarchy"}},[t._v("#")]),t._v(" Step 1: Break The UI Into A Component Hierarchy")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("第一步：把UI划分出组件层级")])])]),t._v(" "),a("p",[t._v("第一件要做的事情是用方框划分出每一个组件(和子组件)并给他们命名。")]),t._v(" "),a("p",[a("strong",[t._v("组件划分的原则：")])]),t._v(" "),a("ul",[a("li",[t._v("解耦：降低单一模块/组件的复杂度")]),t._v(" "),a("li",[t._v("复用：保证组件一致性，提升开发效率")]),t._v(" "),a("li",[t._v("组件颗粒度需要避免过大或过小")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.ax1x.com/2019/04/06/AWhN34.png",alt:"组件的划分"}})]),t._v(" "),a("p",[t._v("如上图所示，这个Todo项目有5个组件。")]),t._v(" "),a("p",[t._v("App(蓝色)：包含了整个项目。")]),t._v(" "),a("p",[t._v("AddTodo(红色)：接受用户的输入并进行添加。")]),t._v(" "),a("p",[t._v("TodoList(橙色)：展示整个待办事项列表。")]),t._v(" "),a("p",[t._v("TodoItem(绿色)：表示每一个待办事项，并有完成和未完成的两种样式。")]),t._v(" "),a("p",[t._v("Footer(粉色)：用来过滤完成与未完成的列表。")]),t._v(" "),a("h3",{attrs:{id:"step-2-build-a-static-version-in-react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-2-build-a-static-version-in-react"}},[t._v("#")]),t._v(" Step 2: Build A Static Version in React")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("第二步：用React创建一个静态版本")])])]),t._v(" "),a("p",[t._v("第二步就是去实现你的应用了，去创建一个静态版本。传入数据模型，渲染UI但是没有任何交互。")]),t._v(" "),a("ul",[a("li",[t._v("创建静态版本使用props来传递数据，不能使用state")]),t._v(" "),a("li",[t._v("可以自顶向下或自底向上的构建应用。在简单的项目中，推荐使用自顶向下的方式")])]),t._v(" "),a("h3",{attrs:{id:"step-3-identify-the-minimal-but-complete-representation-of-ui-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-3-identify-the-minimal-but-complete-representation-of-ui-state"}},[t._v("#")]),t._v(" Step 3: Identify The Minimal (but complete) Representation Of UI State")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("第三步：定义UI最小（但完整的）表示")])])]),t._v(" "),a("p",[t._v("其实第三步就是去设计项目中的state。因为为了使项目进行UI交互，就需要触发能够对底层数据模型的更改，这时候就需要state了。")]),t._v(" "),a("p",[t._v("**state是代表UI的完整且最小的状态集合。**所以在定义State时，首先这个state是代表UI的，如定义了一个定时器state，它不是UI，所以不能当作state；其次这个state是一种状态，这种状态是可变的，如果这个state是一成不变的，也就不能把它定义成state。")]),t._v(" "),a("p",[t._v("如果项目中有多个数据，但是不确定能不能将其定义为state。那么可以考虑这三个问题：")]),t._v(" "),a("ul",[a("li",[t._v("它是通过 props 从父级传来的吗？如果是，他可能不是 state。")]),t._v(" "),a("li",[t._v("它随着时间推移不变吗？如果是，它可能不是 state。")]),t._v(" "),a("li",[t._v("你能够根据组件中任何其他的 state 或 props 把它计算出来吗？如果是，它不是 state。")])]),t._v(" "),a("p",[t._v("所以，这个Todo项目最后的state是：")]),t._v(" "),a("ul",[a("li",[t._v("待办事项列表")]),t._v(" "),a("li",[t._v("新增输入框中的文本")]),t._v(" "),a("li",[t._v("当前筛选条件")])]),t._v(" "),a("h3",{attrs:{id:"step-4-identify-where-your-state-should-live"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-4-identify-where-your-state-should-live"}},[t._v("#")]),t._v(" Step 4: Identify Where Your State Should Live")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("第四步：定义你的State存放的位置")])])]),t._v(" "),a("p",[t._v("state的双层含义：")]),t._v(" "),a("ol",[a("li",[t._v("代表应用UI的所有状态的集合")]),t._v(" "),a("li",[t._v("状态集合中的每一部分（待办事项列表、新增输入框中的文本、当前筛选条件）")])]),t._v(" "),a("p",[t._v("第四步中的state指的是第二个含义。在不同语境下，要理解state的不同含义。")]),t._v(" "),a("p",[t._v("分析state的保存位置的步骤：")]),t._v(" "),a("ul",[a("li",[t._v("确定依赖state的每一个组件")]),t._v(" "),a("li",[t._v("如果某个state被多个组件依赖，寻找共同的父组件。也叫"),a("a",{attrs:{href:"https://react.docschina.org/docs/lifting-state-up.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("状态提升"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("如果你没有找到可以拥有这个 state 的组件，创建一个仅用来保存状态的组件并把它加入比这个公共所有者组件层级更高的地方。")])]),t._v(" "),a("p",[t._v("所以根据上面的步骤，可以判断出该项目的state的存放位置")]),t._v(" "),a("ul",[a("li",[t._v("待办事项列表："),a("code",[t._v("todos")]),t._v("。TodoList和AddTodo组件都会依赖，所以定义在"),a("strong",[t._v("App组件")]),t._v("中。")]),t._v(" "),a("li",[t._v("新增输入框中的文本："),a("code",[t._v("text")]),t._v("。只有AddTodo组件依赖，所以定义在"),a("strong",[t._v("AddTodo组件")]),t._v("中。")]),t._v(" "),a("li",[t._v("当前筛选条件："),a("code",[t._v("filter")]),t._v("。TodoList和Footer组件都会依赖，所以定义在"),a("strong",[t._v("App组件")]),t._v("中。")])]),t._v(" "),a("h3",{attrs:{id:"step-5-add-inverse-data-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-5-add-inverse-data-flow"}},[t._v("#")]),t._v(" Step 5: Add Inverse Data Flow")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("第五步：添加反向数据流")])])]),t._v(" "),a("p",[t._v("通过props，添加反向数据流，实现交互行为的添加。")]),t._v(" "),a("p",[t._v("在这个项目中，需要添加的交互行为有：")]),t._v(" "),a("ul",[a("li",[t._v("新增todo")]),t._v(" "),a("li",[t._v("修改todo状态")]),t._v(" "),a("li",[t._v("过滤显示")])]),t._v(" "),a("h3",{attrs:{id:"and-that-s-it"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#and-that-s-it"}},[t._v("#")]),t._v(" And That’s It")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("就是这样")])])]),t._v(" "),a("p",[t._v("到这里就结束了，从上面的五步中了解了如何使用React构建组件和应用程序。虽然这可能会比以前编写更多的代码，但请记住，代码是用来读的，这比写更重要，并且非常容易阅读这个模块化的，思路清晰的代码。")])])}),[],!1,null,null,null);e.default=_.exports}}]);